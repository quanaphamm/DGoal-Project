import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { postJob } from "../services/api"; // ‚úÖ API function
import "./TuyenDung.css";

const TuyenDung = () => {
    const navigate = useNavigate();
    const [job, setJob] = useState({
        company: "",
        title: "",
        salary: "",
        location: "",
        type: "To√†n th·ªùi gian",
        description: "",
        requirements: ""
    });

    const [error, setError] = useState("");
    const [success, setSuccess] = useState("");

    // üõ† Handle Input Changes
    const handleChange = (e) => {
        setJob({ ...job, [e.target.name]: e.target.value });
    };

    // üõ† Handle Job Submission
    const handleSubmit = async (e) => {
        e.preventDefault();
        setError("");
        setSuccess("");

        if (!job.company || !job.title || !job.salary || !job.location || !job.description || !job.requirements) {
            setError("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
            return;
        }

        try {
            await postJob(job); // ‚úÖ Send job data to backend
            setSuccess("C√¥ng vi·ªác ƒë√£ ƒë∆∞·ª£c ƒëƒÉng th√†nh c√¥ng!");
            
            // ‚úÖ Redirect to job listings after 2 seconds
            setTimeout(() => navigate("/timviec"), 2000);
        } catch (err) {
            setError(err.response?.data?.error || "C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.");
        }
    };

    return (
        <div className="tuyendung-container">
            <h2>ƒêƒÉng Tuy·ªÉn C√¥ng Vi·ªác</h2>
            {error && <p className="error-message">{error}</p>}
            {success && <p className="success-message">{success}</p>}

            <form onSubmit={handleSubmit}>
                <label>T√™n C√¥ng Ty:</label>
                <input type="text" name="company" placeholder="Nh·∫≠p t√™n c√¥ng ty" value={job.company} onChange={handleChange} required />

                <label>V·ªã Tr√≠ C·∫ßn Tuy·ªÉn:</label>
                <input type="text" name="title" placeholder="Nh·∫≠p v·ªã tr√≠ tuy·ªÉn d·ª•ng" value={job.title} onChange={handleChange} required />

                <label>M·ª©c L∆∞∆°ng:</label>
                <input type="text" name="salary" placeholder="Nh·∫≠p m·ª©c l∆∞∆°ng" value={job.salary} onChange={handleChange} required />

                <label>ƒê·ªãa ƒêi·ªÉm:</label>
                <input type="text" name="location" placeholder="Nh·∫≠p ƒë·ªãa ƒëi·ªÉm l√†m vi·ªác" value={job.location} onChange={handleChange} required />

                <label>Lo·∫°i H√¨nh C√¥ng Vi·ªác:</label>
                <select name="type" value={job.type} onChange={handleChange}>
                    <option value="To√†n th·ªùi gian">To√†n th·ªùi gian</option>
                    <option value="B√°n th·ªùi gian">B√°n th·ªùi gian</option>
                    <option value="Th·ª±c t·∫≠p">Th·ª±c t·∫≠p</option>
                    <option value="Freelancer">Freelancer</option>
                </select>

                <label>M√¥ T·∫£ C√¥ng Vi·ªác:</label>
                <textarea name="description" placeholder="Nh·∫≠p m√¥ t·∫£ c√¥ng vi·ªác" value={job.description} onChange={handleChange} required></textarea>

                <label>Y√™u C·∫ßu C√¥ng Vi·ªác:</label>
                <textarea name="requirements" placeholder="Nh·∫≠p y√™u c·∫ßu c√¥ng vi·ªác" value={job.requirements} onChange={handleChange} required></textarea>

                <button type="submit" className="post-job-btn">ƒêƒÉng C√¥ng Vi·ªác</button>
            </form>
        </div>
    );
};

export default TuyenDung;
