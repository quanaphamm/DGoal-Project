import React, { useState, useEffect } from "react";
import { useLocation } from "react-router-dom";
import "./timviec.css";

const TimViec = () => {
    const [jobs, setJobs] = useState([]);
    const [selectedJob, setSelectedJob] = useState(null);
    const location = useLocation();

    useEffect(() => {
        // ‚úÖ Get stored jobs or use empty array if none exist
        const storedJobs = JSON.parse(localStorage.getItem("jobs")) || [];

        // ‚úÖ Default job listings
        const defaultJobs = [
            {
                id: 5, // Ensuring a unique ID
                title: "L√°i xe b·ªìn",
                company: "CTNH MINQUAN.",
                salary: "67tr/th√°ng",
                location: "S√†i G√≤n",
                type: "To√†n th·ªùi gian",
                description: "L√°i xe b·ªìn ch·ªü h√†ng ƒë·∫øn c√°c ƒë·ªãa ƒëi·ªÉm ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh, ƒë·∫£m b·∫£o an to√†n giao th√¥ng...",
                requirements: "C√≥ b·∫±ng l√°i xe h·∫°ng C tr·ªü l√™n, c√≥ √≠t nh·∫•t 2 nƒÉm kinh nghi·ªám l√°i xe b·ªìn."
            },
            {
                id: 2, // Ensuring a unique ID
                title: "K·∫ø to√°n",
                company: "CTNH MINQUAN.",
                salary: "15-20tr/th√°ng",
                location: "S√†i G√≤n",
                type: "To√†n th·ªùi gian",
                description: "Ph·ª• tr√°ch s·ªï s√°ch k·∫ø to√°n, theo d√µi thu chi, l·∫≠p b√°o c√°o t√†i ch√≠nh...",
                requirements: "T·ªët nghi·ªáp chuy√™n ng√†nh k·∫ø to√°n, c√≥ ch·ª©ng ch·ªâ h√†nh ngh·ªÅ k·∫ø to√°n l√† l·ª£i th·∫ø."
            }
        ];

        // ‚úÖ Ensure unique job IDs by using a Set
        const allJobs = [...defaultJobs, ...storedJobs];
        const uniqueJobs = Array.from(new Map(allJobs.map(job => [job.id, job])).values());

        setJobs(uniqueJobs);

        // ‚úÖ Check for job selection in URL
        const queryParams = new URLSearchParams(location.search);
        const jobIdFromURL = parseInt(queryParams.get("jobId"));

        if (jobIdFromURL) {
            const jobToSelect = uniqueJobs.find(job => job.id === jobIdFromURL);
            if (jobToSelect) {
                setSelectedJob(jobToSelect);
            }
        } else {
            setSelectedJob(uniqueJobs[0]); // ‚úÖ Default to first job
        }
    }, [location.search]);

    return (
        <div className="timviec-container">
            {/* ‚úÖ Job List Section */}
            <div className="job-list">
                {jobs.map((job) => (
                    <div 
                        key={job.id}  // ‚úÖ Ensured Unique Key
                        className={`job-item ${selectedJob?.id === job.id ? "selected" : ""}`} 
                        onClick={() => setSelectedJob(job)}
                    >
                        <h3>{job.title}</h3>
                        <p><strong>{job.company}</strong></p>
                        <p className="salary">üí∞ {job.salary}</p>
                        <p className="location">üìç {job.location}</p>
                        <p className="type">‚è≥ {job.type}</p>
                    </div>
                ))}
            </div>

            {/* ‚úÖ Job Details Section */}
            <div className="job-details">
                {selectedJob && (
                    <div className="job-details-container">
                        <p className="company">{selectedJob.company}</p>
                        <h2 className="job-title">{selectedJob.title}</h2>

                        <div className="divider"></div>

                        <p className="label">üí∞ L∆∞∆°ng: <span className="salary">{selectedJob.salary}</span></p>
                        <p className="label">üìç ƒê·ªãa ƒëi·ªÉm: <span className="location">{selectedJob.location}</span></p>
                        <p className="label">‚è≥ Lo·∫°i h√¨nh: <span className="type">{selectedJob.type}</span></p>

                        <div className="divider"></div>

                        <div className="job-description">
                            <strong>üìã M√¥ t·∫£ c√¥ng vi·ªác:</strong>
                            <p>{selectedJob.description}</p>
                        </div>

                        <div className="divider"></div>

                        <div className="job-requirements">
                            <strong>üõ† Y√™u c·∫ßu c√¥ng vi·ªác:</strong>
                            <p>{selectedJob.requirements ? selectedJob.requirements : "Kh√¥ng c√≥ y√™u c·∫ßu c·ª• th·ªÉ."}</p>
                        </div>

                        <div className="button-group">
                            <button className="save-btn">‚≠ê L∆∞u</button>
                            <button className="apply-btn">üì© ·ª®ng tuy·ªÉn</button>
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
};

export default TimViec;
